# 14-BroadcastThemeFromSchinldersList.rb
#Broadcast version for Sonic Pi
#coded by Robin Newman,Mar 2021
#utilises script broadcastOSC.py
use_debug false
use_cue_logging false
use_osc_logging false
titlecode="14 Theme from Schindlers List"
use_osc "localhost",8000
computer=get(:computer) #this computer number
computer=get(:computer) #this computer number
computer = 1 if computer == nil #use 1 if computer: not specified

#qt is scale factor for amplitude. Set using :attentuate value
qt=get(:attenuate)
qt=1 if (qt == nil ) #in case attenuate has not been set
qt=[[qt,0].max,1].min

st=0 #start section of multi tempo music
#set_audio_latency! 234 #adjust for latency of computer relative to the others #this value for Mac
#play data sustain and release fracions and synth for each part
s=(ring 0.95);r=(ring 0.05);synth=(ring "blade") #parameters for the run. (s,r sustain release fractions)

amp=(ring 0.8,0.8,0.5,0.5,0.5)

define :decode do |dl|#return selected channels in an integer array
    puts "entry",dl #print current entry
  if dl.is_a? Numeric
    return Array(dl)
  else
    return dl[1..-2].split(",").map {|str| str.to_i}
  end
end

define :bosc do |num,nv,dv,s,r,synth,tempo,amp,cueval,tr=0| #cueval used to separate tempo sections
  nv.length.times do
    tick
    if nv.look.respond_to?(:each) #deal with chords (played without gap between notes)
      nv.look.each do |v|
        osc "/triggerBroadcast", num, note(v)+tr,(dv.look),s,r,synth,tempo,amp
      end
    else
      if nv.look!=:r #ignore rests
        osc "/triggerBroadcast", num, note(nv.look)+tr,(dv.look),s,r,synth,tempo,amp
      end
    end
     with_bpm tempo do;sleep dv.look;end
  end
  cue cueval
end

with_fx :reverb,room: 0.8,mix: 0.6 do #add some reverb to playback
  
  live_loop :pl do
    use_real_time
    b = sync"/osc*/broadcast"
    if b[0]==99 #99 is channel code to receive channel data lists
      op=[] #start output list
      b.each do |x| #check each element and process using decode
        op << (decode x)
      end
      #op now contains all machine channel list with array elements for each machine
      op[computer]=["none found"] if op[computer]==nil
      set :channel,op[computer]
    elsif b[0]==10
      sleep 2
      osc_send "localhost",4560,"/playnext",b[1] #send info back to calling buffer
      sleep 0.2
      stop
    end
    channel=get(:channel)
    puts "title code #{titlecode}: tempo #{b[6]}"
    puts "channels for computer no #{computer} #{channel}"
    if channel.include? b[0]
      use_synth b[5].to_sym
      use_bpm b[6]
      play b[1],sustain: b[2]*b[3],release: b[2]*b[4],amp: b[7]
    end
  end
end

########## Allocate channels to be played by each computer here
#computer number               1      2     3     4     5     6     7     8
osc "/triggerBroadcast",99,    0,     0,    1,    1,    2,    2,    3,    4
#osc "/triggerBroadcast",99,    "[0 ,1]",     9,    9,    9,    "[2,3,4 ]"#,    2,    3,    4

a1=[]
b1=[]
a1[0]=[:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:A5,:r,:r]
b1[0]=[0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,2.0,1.0]
a1[1]=[:A3,:A4,:D4,:A4,:D4,:Bf4,:A4,:F4,:A3,:F4,:G3,:F4,:G4,:A4,:A4,:D4,:A4,:D4,:C5,:Bf4,:A4,:G4,:C4,:Bf3,:E4,:G4,:Bf4,:A4,:G4,:F4,:G4,:Bf3,:G4,:Bf3,:A4,:G4,:F4,:G4,:A4,:A3,:G4,:Bf3,:G4,:Bf3,:A4,:G4,:F4,:E4,:D4,:E4,:F4,:G3,:F4,:G3,:A4,:G4,:F4,:E4,:D4,:A4,:A5,:D5,:A5,:D5,:Bf5,:A5,:F5,:A4,:F5,:G4,:F5,:G5,:A5,:A5,:D5,:A5,:D5,:C6,:Bf5,:A5,:G5,:C5,:Bf4,:E5,:G5,:Bf5,:A5,:G5,:F5,:G5,:Bf4,:G5,:Bf4,:A5,:G5,:F5,:G5,:A5,:A4,:G5,:Bf4,:G5,:Bf4,:A5,:G5,:F5,:E5,:D5,:E5,:F5,:G4,:F5,:G4,:A5,:G5,:F5,:E5,:D5]
b1[1]=[1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,3.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,2.0,2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,3.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,3.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,2.0,2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,4.0]
a1[2]=[:r,:Bf3,:G3,:D4,:G3,:A3,:G3,:A3,:D4,:F4,:A4,:D5,:G5,:E5,:D5,:Bf4,:G4,:E4,:D4,:Bf3,:G4,:G3,:G4,:F4,:E4,:E5,:E5,:D5,:F5,:E5,:B4,:C5,:D5,:C5,:D5,:B4,:A4,:Af4,:B4,:A4,:E5,:D5,:G5,:F5,:B4,:C5,:D5,:D4,:E4,:F4,:F4,:G4,:A4,:A4,:B4,:Ef5,:Fs4,:B4,:Ef5,:Fs5,:B5,:Ef6,:E6,:A5,:E6,:A5,:F6,:E6,:C6,:E5,:C6,:D5,:C6,:D6,:E6,:E6,:A5,:E6,:A5,:G6,:F6,:E6,:D6,:G5,:F5,:B5,:D6,:F6,:E6,:D6,:C6,:D6,:F5,:D6,:F5,:E6,:D6,:C6,:D6,:E6,:C6,:B5,:A5,:E5,:C5,:B4,:A4,:E4,:C5,:D5,:F4,:D5,:F4,:E5,:D5,:C5,:D5,:C5,:B4,:A4,:A3,:C4,:E4,:F4,:A4,:B4,:C5,:B4,:A4,:B4,:C5,:D4,:C5,:D4,:E5,:D5,:C5,:B4,:A4,:B3,:C4,:E4,:A4,:C5,:E5,:A5,:C6,:D6,:E6,:A5,:E6,:A5,:F6,:E6,:C6,:E5,:G6,:F6,:E6,:D6,:C6,:D6,:B5,:A5,:G5,:F5,:E5,:D5,:C5,:B4,:A4,:G4,:F4,:E4,:D4,:C4,:B3,:F4,:D5,:C5,:B4,:D4,:F5,:E5,:D5,:B5,:D6,:F5,:E5,:Af6,:A6,:r]
b1[2]=[2.0,1.5,0.5,1.0,1.0,0.75,0.25,0.25,0.25,0.25,0.25,2.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,1.0,0.5,0.5,0.75,0.25,0.5,1.0,0.25,0.25,0.5,0.5,0.75,0.25,1.5,0.25,0.25,0.5,0.25,0.25,0.5,2.0,0.25,0.25,0.5,0.5,0.75,0.25,1.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.125,0.125,0.125,0.125,0.125,0.125,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.125,0.125,0.125,0.125,0.125,0.125,0.125,1.625,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.0625,0.0625,0.375,0.5,0.5,0.5,0.25,0.25,0.25,0.25,1.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.5,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.25,0.25,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,6.0,2.0]
c1=[42,48,60]
 in_thread do
   for i in st..a1.length-1
     in_thread do
       bosc 0,a1[i],b1[i],s[0],r[0],synth[0],c1[i],amp[0]*qt,:cont0,-2
     end
     sync :cont0
   end
     sleep 0.2
   osc "/triggerBroadcast",10,"finished14" #kill player for first part in program above
 end

a2=[]
b2=[]
a2[0]=[:E5,:D5,:F5,:E5,:C5,:B4,:D5,:C5,:B4,:D5,:C5,:B4,:A4]
b2[0]=[0.5,0.5,1.0,1.0,0.5,0.5,1.5,0.5,0.5,0.5,1.0,1.0,3.0]
a2[1]=[:r,:F4,:Bf3,:G3,:C4,:A3,:F4,:D4,:D4,:E4,:F4,:Bf3,:C4,:C4,:A3,:C4,:F4,:Bf3,:A3,:D4,:Cs4,:F4,:Bf3,:D4,:E4,:r,:F4,:E4,:D4,:D4,:Cs4,:r,:D4,:Cs4,:A3,:G3,:Bf3,:A3,:A4,:D5,:A5,:Bf4,:G4,:C4,:F4,:G4,:A4,:A3,:Bf3,:C4,:D4,:F4,:E4,:C4,:Bf4,:Bf4,:Bf3,:A3,:Bf3,:A3,:Cs4,:E4,:F4,:r,:G4,[:Bf3,:E4],:A3,:F4,:A4,:D5,:Bf4,:A4,:Bf3,:G3,:A3,:A3,:G3,:Bf3,:A3]
b2[1]=[1.0,4.0,1.5,0.5,1.0,0.5,0.5,2.0,0.5,0.5,1.0,1.5,0.5,0.5,0.5,0.5,0.5,2.0,0.5,0.5,1.0,4.0,2.0,1.0,1.0,0.5,0.5,0.5,0.5,1.0,1.0,1.0,2.0,1.0,0.5,0.25,0.25,2.0,1.0,2.0,2.0,2.0,0.5,0.5,0.5,0.5,2.0,0.5,1.0,0.25,0.25,1.0,1.0,2.0,1.5,0.5,1.0,1.0,0.5,0.5,0.5,1.0,1.5,1.0,1.0,1.5,0.5,0.5,0.5,1.0,1.0,1.0,2.0,1.0,1.0,0.5,0.25,0.25,3.0]
a2[2]=[:r,:A4,:G4,:Bf4,:A4,:E4,:F4,:G4,:F4,:G4,:E4,:D4,:Cs4,:E4,:D4,:A4,:G4,:C5,:Bf4,:E4,:F4,:G4,:G3,:A3,:Bf3,:Bf3,:C4,:D4,:E4,:F4,:Af4,:r,:r,:D6,:C6,:B5,:A5,:F5,:E5,:D5,:A4,:F4,:E4,:D5,:C5,:B4,:A4,:F4,:E4,:D4,:C4,:B3,:A3,:D4,:A3,:Fs4,:E5,:E4,:F5,:G5,:r,:G5,:F5,:E5,:F5,:E5,:C5,:C5,:C5,:B4,:D5,:F5,:B4,:G4,:r,:A4,:A4,:A4,:A4,:Af4,:A4,:E4,:F4,:F4,:D4,:A4,:A4,:Af4,:F4,:Af4,:A4,:E5,:E6,:C5,:B4,:F4,:Af4,:D4,:E4,[:E4,:C5],:E4,:A4,:C5,:E5,[:E5,:C6],:r]
b2[2]=[0.5,0.25,0.25,0.5,0.5,0.75,0.25,1.5,0.25,0.25,0.5,0.25,0.25,0.5,2.0,0.25,0.25,0.5,0.5,0.75,0.25,1.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,1.0,0.25,0.25,0.25,0.25,1.25,0.25,0.25,0.25,0.5,1.0,1.75,0.25,0.25,0.25,2.0,0.75,0.25,0.25,0.25,0.25,0.25,1.0,2.0,1.0,2.0,2.0,1.5,0.5,0.5,0.25,0.25,0.25,0.25,1.0,1.5,2.0,0.5,0.5,0.5,0.5,1.0,1.0,0.5,0.5,0.5,0.5,1.0,1.0,2.0,2.0,2.0,1.0,1.0,2.0,1.0,1.0,2.0,2.0,2.25,1.75,4.0,4.0,4.0,1.0,1.0,1.0,1.0,2.0,0.5,0.5,0.5,0.5,2.0,2.0]
c2=[42,48,60]
in_thread do
   for i in st..a2.length-1
     in_thread do
       bosc 1,a2[i],b2[i],s[1],r[1],synth[1],c2[i],amp[1]*qt,:cont1,-2
     end
     sync :cont1
   end
 end

a3=[]
b3=[]
a3[0]=[:C4,:A3,:D4,:A4,:F4,:A4,:F4,:A4,:F4,:E4,:F4,:D4,:D4,:A3]
b3[0]=[1.0,0.5,0.5,1.0,1.0,0.5,0.5,1.0,1.0,1.0,1.0,1.5,0.5,1.0]
a3[1]=[:r,:D4,:D4,:E4,:F4,:F4,[:Bf3,:F4],:C3,:F3,:G3,:Bf3,:F3,:A3,:r,:D3,:E3,:E4,:r,:D4,:Cs4,:A3,:G3,:A3,:Bf3,:A3,[:A3,:D4],:A3,:D4,:E4,:F4,:G4,:r,:F4,:D5,:F4,:C4,:A3,:C4,:A4,:G4,:D4,:Bf3,:C4,:E4,:F4,:D4,:D4,:D4,:Cs4,:A3,:E4,:D4,:G3,:G4,:A3,:A4,:Bf4,:Cs5,:D4,:Cs4,:D4,:D4,:E4,:D4]
b3[1]=[1.0,4.0,1.5,0.5,2.0,2.0,2.0,0.5,0.5,0.5,0.5,1.5,0.5,1.0,1.0,2.0,4.0,1.0,2.0,1.0,2.0,1.0,1.0,2.0,2.0,1.5,0.5,0.5,0.5,0.5,0.5,0.5,1.5,2.0,2.0,1.0,0.5,0.5,1.0,1.5,1.5,1.5,0.5,1.0,1.0,1.5,0.5,1.0,1.0,1.0,2.0,1.0,1.0,1.0,2.0,2.0,1.0,1.0,3.0,1.0,1.0,0.75,0.25,2.0]
a3[2]=[:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:A3,:A3,:A3,:A3,:E4,:E4,:E4,:E4,:D4,:D4,:G3,:G3,:Bf3,:Bf3,:B3,:B3,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:D4,:r,:B3,:B3,:B3,:B3,:B3,:B3,:B3,:B3,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:C4,:B3,:B3,:D4,:D3,:B3,:r,:A3,:C4,:E4,:r,:E3,:C4,:E4,:A3,:A3,:B3,:r,:C4,:E4,:C4,:A4,:G4,:D4,:E4,:A3,:A4,:Af4,:E4,:C4,:A4,:A3,:r,:A3,:A3,:A3,:E3,:C4,:B3,:B3,:B3,:C4,:A3,:B3,:C4,:A4,:A4,:A4,:F4,:F3,:A3,:F3,:B3,:F4,:D4,:A4,:B4,:A4,:B4,:A4,:E4,:A3,:r]
b3[2]=[0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.09375,0.03125,0.125,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,1.0,1.0,2.0,1.0,2.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,1.5,1.0,1.0,2.0,2.0,1.0,1.0,2.0,1.0,1.0,0.5,0.5,1.0,2.0,0.5,0.5,0.5,0.5,2.0,2.0,2.0,2.0,2.0,1.0,0.5,0.5,0.5,1.5,4.0,1.0,3.0,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,2.0,2.0,2.0,2.0]
c3=[42,48,60]
in_thread do
   for i in st..a3.length-1
     in_thread do
       bosc 2,a3[i],b3[i],s[2],r[2],synth[2],c3[i],amp[2]*qt,:cont2,-2
     end
     sync :cont2
   end
 end

a4=[]
b4=[]
a4[0]=[:A2,:E3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A3,:A2,:E3,:A3,:B3,:Cs4]
b4[0]=[0.5,0.5,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,1.0]
a4[1]=[:r,:D3,:G2,:C3,:F3,:F3,:D3,:G2,:C3,:F2,:E2,:A2,:r,:A2,:F3,:A3,:E4,:G2,:A2,:E3,:A3,:Bf2,:A2,:G2,:A2,:D3,:A2,:E3,:Cs4,:A3,:A4,:F4,:G3,:F3,:D3,:G2,:C3,:F3,:E3,:A2,:D3,:G2,:D3,:G3,:E3,:A2,:Bf2,:F3,:A4,:A3,:G3,:Bf3,:A3,:G3,:F4,:E4,:A4,:D4]
b4[1]=[1.0,4.0,1.0,1.0,2.0,1.0,1.0,2.0,2.0,2.0,2.0,2.0,0.5,0.5,0.5,0.5,2.0,2.0,0.5,0.5,1.0,2.0,2.0,2.0,2.0,2.0,0.5,0.5,0.5,0.5,4.0,1.0,1.0,2.0,2.0,2.0,2.0,2.0,2.0,2.0,4.0,0.5,0.5,1.0,1.0,1.0,0.5,0.5,1.0,0.5,0.25,0.25,1.0,1.0,2.0,1.0,1.0,3.0]
a4[2]=[:r,:A4,:A4,:A4,:A4,:Bf3,:Bf3,:Bf3,:Bf3,:F3,:F3,:F3,:F3,:E3,:D3,:D3,:D3,:D3,:Bf3,:Bf3,:Bf3,:Bf3,:Bf3,:Bf3,:Bf3,:Bf3,:G3,:G3,:Af3,:Af3,:r,:D3,:F3,:D3,:B2,:A2,:A2,:D3,:G2,:C3,:A2,:E3,:C4,:D2,:A2,:F3,:A3,:G2,:D3,:B3,:C3,:G3,:E4,:C4,:B2,:F3,:E3,:A2,:E3,:A3,:C4,:E4,:C3,:B2,:A3,:Af3,:F3,:F3,:E3,:D3,:E3,:A2,:E3,:A3,:A4,:D4,:D4,:D4,:F3,:E3,:A2,:E3,:A3,:C4,:E4,:A4,:r]
b4[2]=[2.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,3.0,2.0,1.0,1.0,2.0,2.0,1.0,1.0,2.0,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,2.0,1.0,1.0,0.5,0.5,0.5,0.5,1.0,1.0,2.0,1.0,1.0,2.0,1.0,1.0,2.0,2.0,0.5,0.5,3.0,4.0,4.0,4.0,2.0,1.0,1.0,0.5,0.5,0.5,0.5,2.0,2.0,2.0]
c4=[42,48,60]
in_thread do
   for i in st..a4.length-1
     in_thread do
       bosc 3,a4[i],b4[i],s[3],r[3],synth[3],c4[i],amp[3]*qt,:cont3,-2
     end
     sync :cont3
   end
 end

a5=[]
b5=[]
a5[0]=[:r,:r,:r,:r]
b5[0]=[3.0,3.0,3.0,4.0]
a5[1]=[:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r]
b5[1]=[4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0]
a5[2]=[:r,:r,:r,:r,:A2,:E3,:r,:E3,:A2,:F3,:r,:F3,:A2,:F3,:r,:D3,:A2,:E3,:A3,:E3,:A2,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r,:r]
b5[2]=[4.0,4.0,4.0,4.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,2.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0]
c5=[42,48,60]
in_thread do
   for i in st..a5.length-1
     in_thread do
       bosc 4,a5[i],b5[i],s[4],r[4],synth[4],c5[i],amp[4]*qt,:cont4,-7
     end
     sync :cont4
   end
 end
