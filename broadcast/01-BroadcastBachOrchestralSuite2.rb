#run_file "01-BroadcastBachOrchestralSuite2.rb"
#Broadcast Version for Sonic Pi
#coded by Robin Newman,Feb 2021
#utilises script broadcastOSC.py
use_debug false
use_cue_logging false
use_osc_logging false
titlecode="01 Bach Orchestral Suite"
use_osc "localhost",8000
computer=get(:computer) #this computer number
computer = 1 if computer == nil #use 1 if computer: not specified


#qt is scale factor for amplitude. Set using :attentuate value
qt=get(:attenuate)
qt=1 if (qt == nil ) #in case attenuate has not been set
qt=[[qt,0].max,1].min

st=0 #start section of multi tempo music
#set_audio_latency! 234 #adjust for latency of computer relative to the others #this value for Mac
#play data sustain and release fracions and synth for each part
s=(ring 0.95);r=(ring 0.05);synth=(ring "tri","blade","blade","blade","saw") #parameters for the run. (s,r sustain release fractions)

amp=(ring 0.4,0.8,0.8,0.8,0.3)

define :decode do |dl|#return selected channels in an integer array
  puts "entry",dl #print current entry
  if dl.is_a? Numeric
    return Array(dl)
  else
    return dl[1..-2].split(",").map {|str| str.to_i}
  end
end

define :bosc do |num,nv,dv,s,r,synth,tempo,amp,cueval,tr=0| #cueval used to separate tempo sections
  nv.length.times do
    tick
    if nv.look.respond_to?(:each) #deal with chords (played without gap between notes)
      nv.look.each do |v|
        osc "/triggerBroadcast", num, note(v)+tr,  (dv.look),s,r,synth,tempo,amp
      end
    else
      if nv.look!=:r #ignore rests
        osc "/triggerBroadcast", num, note(nv.look)+tr,(dv.look),s,r,synth,tempo,amp
      end
    end
    with_bpm tempo do;sleep dv.look;end
  end
  cue cueval
end

with_fx :reverb,room: 0.8,mix: 0.6 do #add some reverb to playback
  
  live_loop :pl do
    use_real_time
    b = sync"/osc*/broadcast"
    if b[0]==99 #99 is channel code to receive channel data lists
      op=[] #start output list
      b.each do |x| #check each element and process using decode
        op << (decode x)
      end
      #op now contains all machine channel list with array elements for each machine
      op[computer]=["none found"] if op[computer]==nil
      set :channel,op[computer]
    elsif b[0]==10 #channel 10 message used to /playnext and then stop live loop
      sleep 2
      osc_send "localhost",4560,"/playnext",b[1] #send info back to calling buffer
      sleep 0.2
      stop
    end
    channel=get(:channel)
    puts "title code #{titlecode}: tempo #{b[6]}"
    puts "channels for computer no #{computer} #{channel}"
    if channel.include? b[0]
      use_synth b[5].to_sym
      use_bpm b[6]
      play b[1],sustain: b[2]*b[3],release: b[2]*b[4],amp: b[7]
    end
  end
end

########## Allocate channels to be played by each computer here
#computer number               1     2     3     4     5     6     7     8
osc "/triggerBroadcast",99,    0,    1,    1,    2,    4,    3,    3,    0
#osc "/triggerBroadcast",99,    "[0,1,2,3]",    9,    9,    9,    4,    9,    9,    9
sleep 0.2#belt and braces: allow a short time to make sure received and procdssed

a1=[]
b1=[]
a1[0]=[:B5,:D6,:B5,:Fs5,:B5,:Fs5,:D5,:Fs5,:D5,:B4,:Fs4,:B4,:D5,:B4,:Cs5,:B4,:Cs5,:B4,:As4,:Cs5,:E5,:Cs5,:D5,:B4,:B5,:D6,:B5,:Fs5,:B5,:Fs5,:D5,:Fs5,:D5,:B4,:D5,:D5,:D5,:D5,:B5,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs5,:Fs5,:Fs5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:F5,:Cs5,:Fs5,:A5,:Fs5,:Gs5,:Fs5,:Gs5,:Fs5,:F5,:Gs5,:B5,:Gs5,:A5,:Gs5,:A5,:Gs5,:Fs5,:A5,:Fs5,:F5,:Fs5,:B5,:Fs5,:F5,:Fs5,:Cs6,:Fs5,:F5,:Fs5,:D6,:Fs5,:F5,:Fs5,:D6,:Cs6,:B5,:Cs6,:A5,:Gs5,:Fs5,:A5,:Gs5,:A5,:Gs5,:A5,:Fs5,:B5,:D6,:B5,:Fs5,:B5,:Fs5,:D5,:Fs5,:D5,:B4,:Fs4,:B4,:D5,:B4,:Cs5,:B4,:Cs5,:B4,:As4,:Cs5,:E5,:Cs5,:D5,:B4,:B5,:D6,:B5,:Fs5,:B5,:Fs5,:D5,:Fs5,:D5,:B4,:D5,:D5,:D5,:D5,:B5,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs5,:Fs5,:Fs5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:F5,:Cs5,:Fs5,:A5,:Fs5,:Gs5,:Fs5,:Gs5,:Fs5,:F5,:Gs5,:B5,:Gs5,:A5,:Gs5,:A5,:Gs5,:Fs5,:A5,:Fs5,:F5,:Fs5,:B5,:Fs5,:F5,:Fs5,:Cs6,:Fs5,:F5,:Fs5,:D6,:Fs5,:F5,:Fs5,:D6,:Cs6,:B5,:Cs6,:A5,:Gs5,:Fs5,:A5,:Gs5,:A5,:Gs5,:A5,:Fs5,:Fs5,:A5,:Fs5,:Cs5,:Fs5,:Cs5,:A4,:Cs5,:A4,:Fs4,:C5,:B4,:E5,:Ds5,:Fs5,:A5,:G5,:Fs5,:G5,:E5,:G5,:B5,:G5,:E5,:G5,:E5,:Cs5,:E5,:Cs5,:A4,:D5,:Fs5,:D5,:E5,:D5,:E5,:D5,:Cs5,:E5,:G5,:E5,:Fs5,:E5,:Fs5,:E5,:D5,:Fs5,:D5,:Cs5,:D5,:G5,:D5,:Cs5,:D5,:A5,:D5,:Cs5,:D5,:B5,:D5,:Cs5,:D5,:B5,:A5,:G5,:A5,:Fs5,:E5,:D5,:Fs5,:E5,:Fs5,:E5,:Fs5,:D5,:Fs5,:Fs5,:Fs5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:E5,:E5,:E5,:E5,:E5,:Cs6,:E5,:E5,:Fs5,:E5,:Fs5,:D5,:B5,:D6,:B5,:A5,:G5,:B5,:A5,:G5,:Fs5,:E5,:G5,:Fs5,:E5,:D5,:C5,:E5,:G5,:E5,:C5,:B4,:C5,:B4,:As4,:Fs4,:G4,:Fs4,:B4,:As4,:Cs5,:E5,:D5,:Cs5,:D5,:B4,:Cs5,:D5,:E5,:Fs5,:D5,:Fs5,:B5,:Fs5,:E5,:D5,:Cs5,:D5,:Cs5,:B4,:Fs5,:A5,:Fs5,:Cs5,:Fs5,:Cs5,:A4,:Cs5,:A4,:Fs4,:C5,:B4,:E5,:Ds5,:Fs5,:A5,:G5,:Fs5,:G5,:E5,:G5,:B5,:G5,:E5,:G5,:E5,:Cs5,:E5,:Cs5,:A4,:D5,:Fs5,:D5,:E5,:D5,:E5,:D5,:Cs5,:E5,:G5,:E5,:Fs5,:E5,:Fs5,:E5,:D5,:Fs5,:D5,:Cs5,:D5,:G5,:D5,:Cs5,:D5,:A5,:D5,:Cs5,:D5,:B5,:D5,:Cs5,:D5,:B5,:A5,:G5,:A5,:Fs5,:E5,:D5,:Fs5,:E5,:Fs5,:E5,:Fs5,:D5,:Fs5,:Fs5,:Fs5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:E5,:E5,:E5,:E5,:E5,:Cs6,:E5,:E5,:Fs5,:E5,:Fs5,:D5,:B5,:D6,:B5,:A5,:G5,:B5,:A5,:G5,:Fs5,:E5,:G5,:Fs5,:E5,:D5,:C5,:E5,:G5,:E5,:C5,:B4,:C5,:B4,:As4,:Fs4,:G4,:Fs4,:B4,:As4,:Cs5,:E5,:D5,:Cs5,:D5,:B4,:Cs5,:D5,:E5,:Fs5,:D5,:Fs5,:B5,:Fs5,:E5,:D5,:Cs5,:D5,:Cs5,:B4]
b1[0]=[0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.125,0.125,0.125,0.125,1.0,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.125,0.125,0.125,0.125,1.0,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.125,0.125,0.125,0.125,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.25,0.25,0.5,1.0,0.125,0.125,0.125,0.125,1.5,0.125,0.125,0.125,0.125,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.5,0.5,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,1.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.125,0.125,0.125,0.125,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.25,0.25,0.5,1.0,0.125,0.125,0.125,0.125,1.5,0.125,0.125,0.125,0.125,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.5,0.5,0.25,0.25,0.25,0.25,1.0,1.0]
c1=[110]
 in_thread do
   for i in st..a1.length-1
     in_thread do
       bosc 0,a1[i],b1[i],s[0],r[0],synth[0],c1[i],amp[0]*qt,:cont0
     end
     sync :cont0
   end
     sleep 0.2
   osc "/triggerBroadcast",10,"finished01" #send to channel 10 to signify program finished
 end

a2=[]
b2=[]
a2[0]=[:B5,:r,:r,:Fs5,:D5,:B4,:B4,:D5,:Cs5,:Cs5,:Cs5,:E5,:D5,:B4,:B5,:Fs5,:D5,:B4,:D5,:Cs5,:D5,:Cs5,:D5,:B5,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs5,:F5,:Fs5,:F5,:Fs5,:B5,:Fs5,:Fs5,:G5,:Fs5,:G5,:F5,:Fs5,:A5,:Gs5,:Gs5,:Gs5,:B5,:A5,:Fs5,:F5,:Fs5,:Cs5,:Fs5,:B4,:Fs5,:A4,:Fs5,:Gs4,:Fs5,:F5,:Fs5,:Gs5,:Cs5,:F5,:Fs5,:B5,:Fs5,:D5,:B4,:B4,:D5,:Cs5,:Cs5,:Cs5,:E5,:D5,:B4,:B5,:Fs5,:D5,:B4,:D5,:Cs5,:D5,:Cs5,:D5,:B5,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs5,:F5,:Fs5,:F5,:Fs5,:B5,:Fs5,:Fs5,:G5,:Fs5,:G5,:F5,:Fs5,:A5,:Gs5,:Gs5,:Gs5,:B5,:A5,:Fs5,:F5,:Fs5,:Cs5,:Fs5,:B4,:Fs5,:A4,:Fs5,:Gs4,:Fs5,:F5,:Fs5,:Gs5,:Cs5,:F5,:Fs5,:Fs5,:Cs5,:A4,:Fs4,:A4,:G4,:Fs4,:E4,:G5,:G5,:E5,:Cs5,:D5,:Fs5,:E5,:E5,:E5,:G5,:Fs5,:D5,:Cs5,:D5,:A4,:D5,:G4,:D5,:Fs4,:D5,:E4,:D5,:Cs5,:D5,:E5,:A4,:Cs5,:D5,:Fs5,:E5,:Fs5,:E5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:E5,:E5,:D5,:E5,:D5,:E5,:Cs6,:E5,:E5,:Fs5,:E5,:Fs5,:D5,:r,:r,:G5,:E5,:B4,:r,:E5,:B4,:G4,:r,:Cs5,:E5,:G5,:G5,:Fs5,:E5,:D5,:Cs5,:B4,:Fs4,:B4,:D5,:B4,:D5,:Fs5,:B5,:Fs5,:E5,:D5,:Cs5,:D5,:B4,:Fs5,:Cs5,:A4,:Fs4,:A4,:G4,:Fs4,:E4,:G5,:G5,:E5,:Cs5,:D5,:Fs5,:E5,:E5,:E5,:G5,:Fs5,:D5,:Cs5,:D5,:A4,:D5,:G4,:D5,:Fs4,:D5,:E4,:D5,:Cs5,:D5,:E5,:A4,:Cs5,:D5,:Fs5,:E5,:Fs5,:E5,:Fs5,:D6,:Fs5,:Fs5,:G5,:Fs5,:G5,:E5,:E5,:D5,:E5,:D5,:E5,:Cs6,:E5,:E5,:Fs5,:E5,:Fs5,:D5,:r,:r,:G5,:E5,:B4,:r,:E5,:B4,:G4,:r,:Cs5,:E5,:G5,:G5,:Fs5,:E5,:D5,:Cs5,:B4,:Fs4,:B4,:D5,:B4,:D5,:Fs5,:B5,:Fs5,:E5,:D5,:Cs5,:D5,:B4]
b2[0]=[0.25,0.25,0.5,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.25,0.25,0.25,0.25,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,0.25,0.25,0.75,0.25,0.75,0.25,0.5,0.125,0.125,0.125,0.125,0.5,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.25,0.25,0.25,0.25,2.0]
c2=[110]
 in_thread do
   for i in st..a2.length-1
     in_thread do
       bosc 1,a2[i],b2[i],s[1],r[1],synth[1],c2[i],amp[1]*qt,:cont1
     end
     sync :cont1
   end
 end

a3=[]
b3=[]
a3[0]=[:Fs5,:r,:r,:D5,:B4,:Fs4,:Fs4,:B4,:B4,:B4,:As4,:As4,:B4,:Fs4,:Fs5,:D5,:B4,:Fs4,:Fs4,:B4,:E4,:B4,:Gs4,:B4,:A4,:E4,:A4,:D5,:Gs4,:D5,:B4,:D5,:Cs5,:G4,:Cs5,:Fs5,:Fs5,:Fs5,:F5,:F5,:Fs5,:A4,:Cs5,:B4,:A4,:Gs4,:B4,:D5,:Cs5,:B4,:A4,:Cs5,:Cs5,:Fs5,:D5,:B4,:Fs4,:Fs4,:B4,:B4,:B4,:As4,:As4,:B4,:Fs4,:Fs5,:D5,:B4,:Fs4,:Fs4,:B4,:E4,:B4,:Gs4,:B4,:A4,:E4,:A4,:D5,:Gs4,:D5,:B4,:D5,:Cs5,:G4,:Cs5,:Fs5,:Fs5,:Fs5,:F5,:F5,:Fs5,:A4,:Cs5,:B4,:A4,:Gs4,:B4,:D5,:Cs5,:B4,:A4,:Cs5,:Cs5,:Cs5,:A4,:Fs4,:Cs4,:Fs4,:E4,:Ds4,:E4,:E5,:E5,:Cs5,:A4,:A4,:D5,:D5,:D5,:Cs5,:Cs5,:D5,:Fs4,:A4,:G4,:Fs4,:E4,:B4,:E5,:A4,:G4,:Fs4,:G4,:A4,:A4,:D5,:A4,:D5,:A4,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs4,:Cs5,:Fs4,:Cs5,:As4,:Cs5,:Cs5,:D5,:Cs5,:D5,:B4,:r,:r,:E5,:B4,:G4,:r,:B4,:G4,:E4,:r,:E4,:G4,:C5,:B4,:As4,:Cs5,:B4,:As4,:B4,:r,:B4,:D5,:Fs5,:B4,:B4,:As4,:Fs4,:Cs5,:A4,:Fs4,:Cs4,:Fs4,:E4,:Ds4,:E4,:E5,:E5,:Cs5,:A4,:A4,:D5,:D5,:D5,:Cs5,:Cs5,:D5,:Fs4,:A4,:G4,:Fs4,:E4,:B4,:E5,:A4,:G4,:Fs4,:G4,:A4,:A4,:D5,:A4,:D5,:A4,:D5,:D5,:E5,:D5,:E5,:Cs5,:Fs4,:Cs5,:Fs4,:Cs5,:As4,:Cs5,:Cs5,:D5,:Cs5,:D5,:B4,:r,:r,:E5,:B4,:G4,:r,:B4,:G4,:E4,:r,:E4,:G4,:C5,:B4,:As4,:Cs5,:B4,:As4,:B4,:r,:B4,:D5,:Fs5,:B4,:B4,:As4,:Fs4]
b3[0]=[0.25,0.25,0.5,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.25,0.25,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.5,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.25,0.25,0.5,0.5,0.5,0.5,2.0]
c3=[110]
 in_thread do
   for i in st..a3.length-1
     in_thread do
       bosc 2,a3[i],b3[i],s[0],r[2],synth[2],c3[i],amp[2]*qt,:cont2
     end
     sync :cont2
   end
 end

a4=[]
b4=[]
a4[0]=[:D5,:r,:r,:B4,:Fs4,:D4,:D4,:Fs4,:G4,:E4,:Fs4,:Fs4,:Fs4,:D4,:D5,:B4,:Fs4,:D4,:B4,:Fs4,:B4,:Gs4,:B4,:E4,:E4,:A4,:Fs4,:A4,:D5,:B4,:D5,:Gs4,:Gs4,:Cs5,:Fs4,:Cs5,:D5,:D5,:Cs5,:Cs5,:Cs4,:Cs5,:A4,:Fs4,:A4,:B4,:Gs4,:B4,:A4,:D5,:Cs5,:B4,:A4,:D5,:B4,:Fs4,:D4,:D4,:Fs4,:G4,:E4,:Fs4,:Fs4,:Fs4,:D4,:D5,:B4,:Fs4,:D4,:B4,:Fs4,:B4,:Gs4,:B4,:E4,:E4,:A4,:Fs4,:A4,:D5,:B4,:D5,:Gs4,:Gs4,:Cs5,:Fs4,:Cs5,:D5,:D5,:Cs5,:Cs5,:Cs4,:Cs5,:A4,:Fs4,:A4,:B4,:Gs4,:B4,:A4,:D5,:Cs5,:B4,:A4,:A4,:Fs4,:Cs4,:A3,:Fs3,:G3,:B3,:B3,:B4,:A4,:A4,:E4,:A4,:Fs4,:B4,:G4,:A4,:A4,:A3,:A4,:Fs4,:D4,:Fs4,:G4,:E4,:G4,:Fs4,:B4,:A4,:G4,:Fs4,:D5,:A4,:D4,:A4,:Fs4,:A4,:A4,:Cs5,:As4,:Cs5,:As4,:Cs5,:Fs4,:Fs4,:r,:r,:B4,:G4,:E4,:r,:G4,:E4,:B3,:r,:G3,:C4,:E4,:Cs4,:Cs4,:D4,:Fs4,:Fs4,:r,:Fs4,:B4,:D5,:D4,:Cs4,:Fs4,:D4,:A4,:Fs4,:Cs4,:A3,:Fs3,:G3,:B3,:B3,:B4,:A4,:A4,:E4,:A4,:Fs4,:B4,:G4,:A4,:A4,:A3,:A4,:Fs4,:D4,:Fs4,:G4,:E4,:G4,:Fs4,:B4,:A4,:G4,:Fs4,:D5,:A4,:D4,:A4,:Fs4,:A4,:A4,:Cs5,:As4,:Cs5,:As4,:Cs5,:Fs4,:Fs4,:r,:r,:B4,:G4,:E4,:r,:G4,:E4,:B3,:r,:G3,:C4,:E4,:Cs4,:Cs4,:D4,:Fs4,:Fs4,:r,:Fs4,:B4,:D5,:D4,:Cs4,:Fs4,:D4]
b4[0]=[0.25,0.25,0.5,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,0.5,0.25,0.25,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,1.0,1.0,0.5,0.25,0.25,1.0,0.5,0.25,0.25,1.0,0.5,0.5,0.5,0.5,1.0,1.0,1.0,1.0,1.0,0.5,0.25,0.25,0.5,0.5,0.5,0.5,2.0]
c4=[110]
 in_thread do
   for i in st..a4.length-1
     in_thread do
       bosc 3,a4[i],b4[i],s[3],r[3],synth[3],c4[i],amp[3]*qt,:cont3
     end
     sync :cont3
   end
 end

a5=[]
b5=[]
a5[0]=[:B2,:r,:B2,:r,:D3,:B2,:Fs3,:D3,:B3,:Fs3,:D3,:B2,:E3,:Cs3,:Fs3,:Fs2,:B2,:Cs3,:D3,:Cs3,:B2,:B2,:D3,:B2,:Fs3,:D3,:B3,:Fs3,:B3,:D4,:B3,:Gs3,:B3,:Gs3,:E3,:Gs3,:E3,:A3,:Cs4,:A3,:D4,:Fs4,:D4,:B3,:D4,:B3,:Gs3,:B3,:Gs3,:Cs4,:D4,:Cs4,:B3,:A3,:Fs3,:B3,:Gs3,:Cs4,:Cs3,:Fs3,:Fs2,:Fs3,:A3,:D3,:B3,:Cs3,:Cs4,:B2,:D4,:B3,:Gs3,:A3,:B3,:Cs4,:Cs3,:Fs3,:B2,:B2,:D3,:B2,:Fs3,:D3,:B3,:Fs3,:D3,:B2,:E3,:Cs3,:Fs3,:Fs2,:B2,:Cs3,:D3,:Cs3,:B2,:B2,:D3,:B2,:Fs3,:D3,:B3,:Fs3,:B3,:D4,:B3,:Gs3,:B3,:Gs3,:E3,:Gs3,:E3,:A3,:Cs4,:A3,:D4,:Fs4,:D4,:B3,:D4,:B3,:Gs3,:B3,:Gs3,:Cs4,:D4,:Cs4,:B3,:A3,:Fs3,:B3,:Gs3,:Cs4,:Cs3,:Fs3,:Fs2,:Fs3,:A3,:D3,:B3,:Cs3,:Cs4,:B2,:D4,:B3,:Gs3,:A3,:B3,:Cs4,:Cs3,:Fs3,:Fs2,:Fs2,:A2,:Fs2,:Cs3,:A2,:Fs3,:A3,:Fs3,:Ds3,:Fs3,:Ds3,:B2,:B2,:B2,:B2,:E3,:B3,:G3,:E3,:G3,:E3,:Cs3,:A2,:E3,:Cs3,:G3,:E3,:Fs3,:B3,:G3,:E3,:A3,:A2,:D3,:D2,:C3,:Fs3,:B2,:G3,:A2,:A3,:G2,:A3,:G3,:E3,:Fs3,:G3,:A3,:A2,:D3,:A2,:Fs2,:D2,:D4,:A3,:Fs3,:A3,:Fs3,:D3,:Fs3,:D3,:A3,:E3,:Cs3,:As2,:E4,:Cs4,:As3,:Cs4,:As3,:Fs3,:As3,:Fs3,:B3,:Fs3,:D3,:B2,:E3,:E3,:E3,:E2,:E3,:E3,:E3,:E2,:E3,:E3,:E3,:E2,:E3,:E4,:Cs4,:As3,:Cs4,:As3,:Fs3,:Fs3,:Fs3,:Fs3,:B3,:D4,:B3,:Fs3,:B3,:Fs3,:D3,:B2,:D3,:Fs3,:Fs2,:B2,:Fs2,:Fs2,:A2,:Fs2,:Cs3,:A2,:Fs3,:A3,:Fs3,:Ds3,:Fs3,:Ds3,:B2,:B2,:B2,:B2,:E3,:B3,:G3,:E3,:G3,:E3,:Cs3,:A2,:E3,:Cs3,:G3,:E3,:Fs3,:B3,:G3,:E3,:A3,:A2,:D3,:D2,:C3,:Fs3,:B2,:G3,:A2,:A3,:G2,:A3,:G3,:E3,:Fs3,:G3,:A3,:A2,:D3,:A2,:Fs2,:D2,:D4,:A3,:Fs3,:A3,:Fs3,:D3,:Fs3,:D3,:A3,:E3,:Cs3,:As2,:E4,:Cs4,:As3,:Cs4,:As3,:Fs3,:As3,:Fs3,:B3,:Fs3,:D3,:B2,:E3,:E3,:E3,:E2,:E3,:E3,:E3,:E2,:E3,:E3,:E3,:E2,:E3,:E4,:Cs4,:As3,:Cs4,:As3,:Fs3,:Fs3,:Fs3,:Fs3,:B3,:D4,:B3,:Fs3,:B3,:Fs3,:D3,:B2,:D3,:Fs3,:Fs2,:B2]
b5[0]=[0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.25,0.25,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,1.0,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.25,0.25,0.5,0.5,2.0]
c5=[110]
 in_thread do
   for i in st..a5.length-1
     in_thread do
       bosc 4,a5[i],b5[i],s[4],r[4],synth[4],c5[i],amp[4]*qt,:cont4
     end
     sync :cont4
   end
 end
